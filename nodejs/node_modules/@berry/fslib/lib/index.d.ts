/// <reference types="node" />
import fs from 'fs';
import { FakeFS } from './FakeFS';
import { NodeFS } from './NodeFS';
import { NativePath } from './path';
export { CreateReadStreamOptions } from './FakeFS';
export { CreateWriteStreamOptions } from './FakeFS';
export { WriteFileOptions } from './FakeFS';
export { Path, PortablePath, NativePath, Filename } from './path';
export { ParsedPath, PathUtils, FormatInputPathObject } from './path';
export { npath, ppath, toFilename } from './path';
export { AliasFS } from './AliasFS';
export { FakeFS } from './FakeFS';
export { CwdFS } from './CwdFS';
export { JailFS } from './JailFS';
export { LazyFS } from './LazyFS';
export { NodeFS } from './NodeFS';
export { PosixFS } from './PosixFS';
export { ProxiedFS } from './ProxiedFS';
export { VirtualFS } from './VirtualFS';
export { ZipFS } from './ZipFS';
export { ZipOpenFS } from './ZipOpenFS';
export declare function patchFs(patchedFs: typeof fs, fakeFs: FakeFS<NativePath>): void;
export declare function extendFs(realFs: typeof fs, fakeFs: FakeFS<NativePath>): typeof fs;
export declare const xfs: NodeFS;
