/// <reference types="emscripten" />
import libzip from './libzip';
declare const _default: {
    readonly HEAP8: Int8Array;
    readonly HEAPU8: Uint8Array;
    ZIP_CHECKCONS: number;
    ZIP_CREATE: number;
    ZIP_EXCL: number;
    ZIP_TRUNCATE: number;
    ZIP_RDONLY: number;
    ZIP_FL_OVERWRITE: number;
    ZIP_OPSYS_DOS: number;
    ZIP_OPSYS_AMIGA: number;
    ZIP_OPSYS_OPENVMS: number;
    ZIP_OPSYS_UNIX: number;
    ZIP_OPSYS_VM_CMS: number;
    ZIP_OPSYS_ATARI_ST: number;
    ZIP_OPSYS_OS_2: number;
    ZIP_OPSYS_MACINTOSH: number;
    ZIP_OPSYS_Z_SYSTEM: number;
    ZIP_OPSYS_CPM: number;
    ZIP_OPSYS_WINDOWS_NTFS: number;
    ZIP_OPSYS_MVS: number;
    ZIP_OPSYS_VSE: number;
    ZIP_OPSYS_ACORN_RISC: number;
    ZIP_OPSYS_VFAT: number;
    ZIP_OPSYS_ALTERNATE_MVS: number;
    ZIP_OPSYS_BEOS: number;
    ZIP_OPSYS_TANDEM: number;
    ZIP_OPSYS_OS_400: number;
    ZIP_OPSYS_OS_X: number;
    uint08S: number;
    uint16S: number;
    uint32S: number;
    uint64S: number;
    malloc: typeof libzip._malloc;
    free: typeof libzip._free;
    getValue: typeof libzip.getValue;
    open: any;
    openFromSource: any;
    close: any;
    discard: any;
    getError: any;
    getName: any;
    getNumEntries: any;
    stat: any;
    statIndex: any;
    fopen: any;
    fopenIndex: any;
    fread: any;
    fclose: any;
    dir: {
        add: any;
    };
    file: {
        add: any;
        getError: any;
        getExternalAttributes: any;
        setExternalAttributes: any;
        setMtime: any;
    };
    error: {
        initWithCode: any;
        strerror: any;
    };
    name: {
        locate: any;
    };
    source: {
        fromUnattachedBuffer: any;
        fromBuffer: any;
        free: any;
    };
    struct: {
        stat: any;
        statS: any;
        statName: any;
        statIndex: any;
        statSize: any;
        statMtime: any;
        error: any;
        errorS: any;
    };
};
export default _default;
